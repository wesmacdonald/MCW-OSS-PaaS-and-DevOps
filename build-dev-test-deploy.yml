# multi-stage yaml pipelines
# build-test-staging-prod pipeline

variables:
  Version.Revision: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 0)]
  VersionMajor: 1
  VersionMinor: 0

name: '$(Build.DefinitionName) $(VersionMajor).$(VersionMinor).$(Date:yy)$(DayOfYear).$(Version.Revision)'

# Only run against master
trigger:
- master

# Don't run against PRs
pr: none

stages:
- stage: build
  jobs:
  - job: run_build
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
        displayName: 'Install Node.js'

      - task: Npm@1
        inputs:
          command: 'install'
          workingDir: 'Hands-on lab/lab-files'
        displayName: 'npm install' 

      - task: Npm@1
        inputs:
          command: 'custom'
          workingDir: 'Hands-on lab/lab-files'
          customCommand: 'run build'
        displayName: 'npm run build'
      
- stage: unittests
  dependsOn: build
  jobs:
  - job: run_tests
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - script: echo 'If I had some unit tests we would execute them here :) '
    
- stage: dev
  dependsOn: unittests
  jobs:
  - deployment: dev
    displayName: Deploy DEV
    pool:
      vmImage: 'Ubuntu 16.04'
    environment: 'npm-dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo 'Deploy container to dev slot/webapp'

- stage: test
  dependsOn: dev
  jobs:
  - job: deploy_test
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - script: echo 'Deploy container to test slot/webapp'

- stage: uat
  dependsOn: test
  jobs:
  - job: deploy_uat
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - script: echo 'Deploy container to uat slot/webapp'

- stage: preprod
  dependsOn: uat
  jobs:
  - job: deploy_preprod
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - script: echo 'Deploy container to preprod slot/webapp'

- stage: production
  dependsOn: preprod
  jobs:
  - job: deploy_prod
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - script: echo 'Deploy container to production slot/webapp'
